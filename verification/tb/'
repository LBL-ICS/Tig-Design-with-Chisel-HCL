/*
 * This source file contains a Verilog description of an IP core
 * automatically generated by the Floating-Point Design Generator.
 *
 * Author: Xiaokun Yang and Maria Vega, University of Houston Clear Lake 
 * Date: June 2022
 *
 * For more information, see the project website at:
 * https://sceweb.sce.uhcl.edu/xiaokun/OpenIC/
 *
//   Latency: 1 cycle per addition
//   Precision: Single bit
//   Resources required: 16 adders (32 x 32 bit)
*/


module tb_Cos();
parameter TEST_SIZE = 9;
parameter LATENCY = 51;
reg [31:0]  output_cos[TEST_SIZE-1:0]; 
reg [31:0]  input_theta[TEST_SIZE-1:0];

`include "tb_func.sv"

initial begin
   $readmemh("../golden/rtl-theta-input.txt",input_theta);
   $readmemh("../golden/rtl-cos-output.txt",output_cos);
end

reg         clock;
reg         reset;
reg  [31:0] io_in;
wire [31:0] io_out;

 always #10 clock = ~clock;

Cos u_Cos(
  .clock (clock ),
  .reset (reset ),
  .io_in (io_in ),
  .io_out(io_out)
);
  
integer i,j; 
real dut_in_real, golden_real, dut_out_real;
initial begin
   reset = 1'b1;
   clock = 1'b0;
   io_in = 32'h0;  
   #2;
   reset = 1'b0;
   @(posedge clock);

  for (i=0; i < TEST_SIZE; i = i+1) begin
    io_in = input_theta[i];  
    dut_in_real=ieee754_to_fp(io_in)*180/PI;
    $display("At %dns, the input theta: %h and %f", $time, io_in, dut_in_real);
    @(posedge clock);
  end
end

initial begin
  wait (reset);
  @(negedge clock);
  repeat(LATENCY) @(negedge clock);
  for (j=0; j < TEST_SIZE; j = j+1) begin
      golden_real=ieee754_to_fp(output_cos[j]);
      dut_out_real=ieee754_to_fp(io_out);
      error_percent  = (ieee754_to_fp(dut_yjp16 )-ieee754_to_fp(golden_yjp16 ))/ieee754_to_fp(golden_yjp16 )*100;
    if(io_out==output_cos[j]) begin
      $display("At %dns, the test case Pass! cos output: %h", $time, output_cos[j]);
      $display("At %dns, the test case Pass! cos output: %f", $time, golden_real);
//error_percent16  = (ieee754_to_fp(dut_yjp16 )-ieee754_to_fp(golden_yjp16 ))/ieee754_to_fp(golden_yjp16 )*100;
    end else begin
      $display("At %dns, the test case FAIL! cos output: %h, expected: %h", $time, io_out, output_cos[j]);
      $display("At %dns, the test case FAIL! cos output: %f, expected: %f", $time, dut_out_real, golden_real);
    end
    @(negedge clock);
  end
  
end
endmodule

